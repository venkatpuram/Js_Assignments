Java Script Assignments
Assignment 1: 
Create a simple page that lets users type in some temperature value in the Fahrenheit scale and when the user clicks a “Show results” button, to show the temperature in Celsius scale. For example, if the user types in 32, your results should show “0 degree Celsius.”
Functionality
At the least, your program should allow for the following
User Input: One text field where the user will type in the temperature in Fahrenheit
Input Validation: When the “Show results” button is clicked, your program should check to see if the user has left the text field empty and also if what the user typed is a number and not anything else.
If there are problems (as in II. above) then your program should show appropriate error messages
Display results: If there are no errors and user input is valid, then your program should show the results to the user.

	<!DOCTYPE html>
	<html>
	<title>Fahrenheit to Celcius Converter</title>
	<body>
	<h2>Temperature Converter</h2>
	<p>Type a value in the Fahrenheit field to convert the value to Celsius:</p>
	<p>
  	<label>Fahrenheit</label>
  	<input id="inputFahrenheit" type="number" placeholder="Fahrenheit" >
	</p>
	<p>Celcius: <span id="outputCelcius"></span></p>
	<button onclick="temperatureConverter()">Show Results</button>
	<script>
	function temperatureConverter() {
    	var valNum=document.getElementById("inputFahrenheit").value;
  	valNum = parseFloat(valNum);
  	document.getElementById("outputCelcius").innerHTML=(valNum-32)/1.8;
	}
	</script>
	</body>
	</html>

Assignment 2:
Write a script which uses a prompt box to get an input. Validate that the input is an Integer between 1 and 30, and then print to the page asterisks (*) to represent the number. Your script must run until you have collected 3 valid inputs as well as generate 3 outputs (one output on one line).
Example:
Input: 4
Input: 6
Input: 12
****
******
************
	
	<!DOCTYPE html>
	<html lang="en">

	<body>
    	<script>
        var x=prompt("input :");
        var y=prompt("input :");
        var z=prompt("input :");
        if(x<=30 && y<=30 && z<=30)
        {
            for(i=1;i<=x;i++)
            {
                document.write("*");
            }
            document.write("<br>");
            for(i=1;i<=y;i++)
            {
                document.write("*");
            }
            document.write("<br>");
            for(i=1;i<=z;i++)
            {
                document.write("*");
            }
            document.write("<br>");
        }
        </script>
	</body>
	</html>

Assignment 3: 
Create an HTML page that will Prompt the user: 
It should take input for the number of rows and the number of columns
Then it should create a table (HTML table) with the given number of row and columns
Each cell of the table should contain the cell id (row#, col#)
	
	<html>
	<head> 
    	<meta charset=utf-8 /> 
    	<title>Create a table</title> 
    	<style type="text/css"> 
    	body {margin: 30px;} 
     	</style>  
    	</head>
    	<body> 
        <table id="myTable" border="1"> 
        </table><form> 
        <input type="button" onclick="createTable()" value="Create the table"> 
        </form>
        <script>
        function createTable()
	{
		rn = window.prompt("Input number of rows", 1);
		cn = window.prompt("Input number of columns",1);
   		for(var r=0;r<parseInt(rn,10);r++)
  		{
   		var x=document.getElementById('myTable').insertRow(r);
   		for(var c=0;c<parseInt(cn,10);c++)  
    		{
     		var y=  x.insertCell(c);
     		y.innerHTML=""+r+""+c; 
    		}
   		}
	}
	</script>
    	</body>
	</html>

Assignment 4:
In this assignment, we will write a JavaScript web application called MyCalculator. All 3 files (the .js, .html and .css files should be in the MyCalculator folder and should be called MyCalculator.XXX).
The program should do the following:
-There should be one resultBox in the .html page and one runCalculator button. This should be clicked to run the program.
-Present a menu of 7 choices to the user, using a prompt:
            1. Add
            2. Subtract
            3. Multiply
            4. Divide
            5. Exponent
            6. Mean
            7. Quit
- If the user selects anything other than 1-7, the program should print an error message and ask the user to select again. Use a for loop to check this.
-If the user selects 1, the program should ask the user to enter the first number and then the second, and then print out the result in the resultBox. Then it should display the prompt menu again.
-Similar behavior for choices 2,3 and 4: for subtract, subtract the second number from the first, for divide, divide the first number by the second.
-We should do isNAN checks for all numbers. Use a for loop to check that each input is a number.
-For choice 5, the program should ask for the base, and then the exponent, and then print out the answer, using the Math.pow() method or equivalent.
-For choice 6, the program should prompt the user to input a series of numbers. The series ends, when the user enters a “***”. At this point, our program should print out the mean value, and then show the main menu prompt again.
	
	mycalculator.html:

	<html>
		<head>
		<title>Calculator</title>
		<script src="calc.js">
		</script>
		</head>

		<body>
		  <button onclick="calc()"> Click Here</button> <br> <br>
		  <label>Result is:</label>
		  <span id="one"></span>
		</body>
	</html>

	calc.js:

	function calc()
	{
    		var num=prompt("select your type:\n1.Add\n2. Substract\n3. Multiply\n4. Division\n5. Exponent\n6. Mean\n7. Exit","");
    		if(num<=7)
    		{
        		if(num==1)
        		{
        			var num1=prompt("enter the first number");
        			var num2=prompt("enter the second number");
        			var num3=Number(num1)+Number(num2);
        			document.getElementById("one").innerHTML=num3;
        		}
        		if(num==2)
        		{
        			var num1=prompt("enter the first number");
        			var num2=prompt("enter the second number");
        			var num3=Number(num1)-Number(num2);
        			document.getElementById("one").innerHTML=num3;
        		}
        		if(num==3)
        		{
        			var num1=prompt("enter the first number");
        			var num2=prompt("enter the second number");
        			var num3=Number(num1)*Number(num2);
        			document.getElementById("one").innerHTML=num3;
        		}
        		if(num==4)
        		{
        			var num1=prompt("enter the first number");
        			var num2=prompt("enter the second number");
        			var num3=Number(num1)/Number(num2);
        			document.getElementById("one").innerHTML=num3;
        		}
        		if(num==5)
        		{
        			var num1=prompt("enter the Base");
        			var num2=prompt("enter the Exponent");
        			var num3=Math.pow(num1,num2);
        			document.getElementById("one").innerHTML=num3;
        		}
        		if(num==6)
        		{
            			var sum=0;
            			var count=0;
            			var num=prompt("enter the series to calculate mean")
            			while(num!="***"){
            				count++;
            				sum=sum+parseInt(num);
            				num=prompt("enter the series to calculate mean")
        			}

            			document.getElementById("one").innerHTML=sum/count;
        		}
        		if(num==7)
        		{
            
        		}
    		}
    		else
    		alert("Enter correct input")
	}	

Assignment  5:
In this assignment you will practice basic HTML, Javascript and CSS concepts
You are asked to build a page to order pizza! The page asks the user to enter information regarding the pizza order and then see a summary of what have been entered. The page is static HTML; however, part of the page will be dynamically built as it will be explained below.
 
Figure 1
The page consists of the following fields:
1. Customer Name & Email (Input fields)
2. Toppings Options (Check Boxes)
3. Delivery method (Radio Buttons)
4. Tip amount (Drop Down Menu), values are 15%, 20%, and 25%
5. Address (Text Area)
6. Action Buttons
7. Help Text (Text Area)
8. Summary of Order (Table)
All the fields are static fields except the last one (Summary Table) which is built based on the values entered by the user.
CSS is used to apply the following visual properties:
• Input fields width is 600px
• Font type: arial
• Font size: 80%
• Background: light gray (#eee)
• Margin: 20px
• Table even rows: background color light gray (#eee)
• Table odd rows: background color white (#fff)
• Table header row: background color black, font color white
This page should implement the following actions (see Figure 2):
1. The Help Text (Field # 1 in Figure 2) is responsible of showing a Hint message to
explaining information about the field that is currently focused (cursor is on the field).
If there is no focus on any field, display a default hint message. Messages are
displayed on (Table 1).
2. Submit Button should check that all fields are filled otherwise display an error
message indicating that there exist missing values.
3. Clear All: Clear All fields.
4. Show Summary: This button is initially disabled. It is enables only when submit
button is pressed and all fields values are valid. Clicking this button should build the Summary Table (see #2 in Figure 2). The table will summarize the pizza order based on what have been filled. The table should show:
• Customer Name
• Customer Email
• Customer Address
• Toppings selected
• Delivery option
• Total Price based on this formula: (base price + 1.5 * #of toppings + delivery fee)*1.0+tip. Where: base price= 10 and delivery is 5. For example, if 3 toppings are selected, delivery is NOT checked and 20% tip is selected, total is (10 + 1.5 * 3 + 0 ) * 1.2 = $17.4
 
Figure 2

